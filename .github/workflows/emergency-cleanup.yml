name: Emergency EC2 Cleanup

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      confirm:
        description: 'Type "CLEANUP" to confirm aggressive cleanup'
        required: true
        default: ''

env:
  AWS_REGION: us-west-2

jobs:
  cleanup:
    runs-on: ubuntu-latest
    name: Emergency Cleanup EC2
    if: github.event.inputs.confirm == 'CLEANUP'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        known_hosts: unnecessary
        
    - name: Add EC2 to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_PROD_HOST }} >> ~/.ssh/known_hosts
        
    - name: Upload emergency cleanup script
      env:
        EC2_HOST: ${{ secrets.EC2_PROD_HOST }}
        EC2_USER: ${{ secrets.EC2_USERNAME }}
      run: |
        scp -o StrictHostKeyChecking=no scripts/emergency-cleanup.sh $EC2_USER@$EC2_HOST:/tmp/emergency-cleanup.sh
    
    - name: Execute emergency cleanup
      env:
        EC2_HOST: ${{ secrets.EC2_PROD_HOST }}
        EC2_USER: ${{ secrets.EC2_USERNAME }}
      run: |
        echo "üö® Starting EMERGENCY CLEANUP on EC2..."
        echo "‚ö†Ô∏è  This will stop ALL Docker containers and clean aggressively"
        
        ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'CLEANUP'
        export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"
        
        chmod +x /tmp/emergency-cleanup.sh
        /tmp/emergency-cleanup.sh
        
        # Additional aggressive cleanup
        echo ""
        echo "=== üîç Checking large directories ==="
        echo "Largest directories:"
        sudo du -sh /* 2>/dev/null | sort -hr | head -10
        
        echo ""
        echo "Docker images remaining:"
        docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
        
        echo ""
        echo "Final disk usage:"
        df -h /
        
        # Cleanup script itself
        rm -f /tmp/emergency-cleanup.sh
        CLEANUP
        
    - name: Restart application if needed
      env:
        EC2_HOST: ${{ secrets.EC2_PROD_HOST }}
        EC2_USER: ${{ secrets.EC2_USERNAME }}
      run: |
        echo "üîÑ Checking if application needs restart..."
        
        ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'RESTART'
        export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"
        
        cd /opt/restaurant-web || exit 1
        
        # Check if docker-compose file exists and restart if needed
        if [ -f docker-compose.yml ]; then
          echo "Restarting application..."
          docker-compose --profile production up -d || echo "App restart failed - may need manual intervention"
          sleep 10
          docker-compose --profile production ps
        else
          echo "No docker-compose.yml found - application may need manual restart"
        fi
        RESTART