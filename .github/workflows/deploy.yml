name: Deploy Restaurant Web

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        type: choice
        default: 'deploy'
        options:
          - deploy
          - check
          - logs
          - backup

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: restaurant-web

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to EC2
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      if: github.event.inputs.action != 'check' && github.event.inputs.action != 'logs'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      if: github.event.inputs.action != 'check' && github.event.inputs.action != 'logs'
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker image
      if: github.event.inputs.action == 'deploy' || github.event.inputs.action == ''
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Build frontend
        cd frontend
        npm ci --production=false
        NODE_OPTIONS='--max-old-space-size=4096' npm run build
        cd ..
        
        # Build and push Docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Deploy to EC2
      env:
        ACTION: ${{ github.event.inputs.action || 'deploy' }}
        EC2_HOST: ${{ secrets.EC2_PROD_HOST }}
        EC2_USER: ${{ secrets.EC2_USERNAME }}
      run: |
        # Setup SSH
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts
        
        # Execute deploy script on EC2
        ssh $EC2_USER@$EC2_HOST << 'EOF'
        export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        cd /opt/restaurant-web
        
        # Download latest deploy script
        curl -sSL https://raw.githubusercontent.com/guiEmotiv/restaurant-web/main/scripts/deploy.sh -o scripts/deploy.sh
        chmod +x scripts/deploy.sh
        
        # Run the action
        ./scripts/deploy.sh ${{ env.ACTION }}
        EOF