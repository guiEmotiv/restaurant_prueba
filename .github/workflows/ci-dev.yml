name: CI Development

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      sqlite:
        image: alpine:latest
        options: --health-cmd="echo 'SQLite ready'" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Django system checks
      run: |
        cd backend
        python manage.py check
    
    - name: Run database migrations
      run: |
        cd backend
        python manage.py migrate
    
    - name: Run Django tests
      run: |
        cd backend
        python manage.py test
      env:
        DJANGO_SETTINGS_MODULE: backend.settings
        DJANGO_ENV: test

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run ESLint
      run: |
        cd frontend
        npm run lint
    
    - name: Run tests
      run: |
        cd frontend
        npm run test:ci
    
    - name: Build application
      run: |
        cd frontend
        npm run build
      env:
        VITE_DISABLE_COGNITO: true
        VITE_API_BASE_URL: http://localhost:8000/api

  build-validation:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image (validation only)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.prod
        push: false
        tags: restaurant-web:dev-test
        build-args: |
          VITE_DISABLE_COGNITO=true
          VITE_API_BASE_URL=http://localhost:8000/api
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Run security scan
      uses: docker/scout-action@v1
      if: ${{ github.event_name == 'pull_request' }}
      with:
        command: cves
        image: restaurant-web:dev-test
        only-severities: critical,high
        exit-code: true