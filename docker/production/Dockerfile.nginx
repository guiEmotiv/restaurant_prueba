# Multi-stage build for optimized Nginx with React build
FROM node:20-alpine AS frontend-builder

ARG VITE_AWS_COGNITO_USER_POOL_ID
ARG VITE_AWS_COGNITO_APP_CLIENT_ID
ARG VITE_DISABLE_COGNITO
ARG VITE_API_BASE_URL

ENV VITE_AWS_COGNITO_USER_POOL_ID=$VITE_AWS_COGNITO_USER_POOL_ID
ENV VITE_AWS_COGNITO_APP_CLIENT_ID=$VITE_AWS_COGNITO_APP_CLIENT_ID
ENV VITE_DISABLE_COGNITO=$VITE_DISABLE_COGNITO
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL

WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci --only=production --no-audit

COPY frontend/ ./
RUN npm run build

# Production Nginx stage
FROM nginx:1.25-alpine

# Install gettext for envsubst (environment variable substitution)
RUN apk add --no-cache gettext

# Copy custom nginx configuration template
COPY docker/production/nginx.conf.template /etc/nginx/nginx.conf.template

# Copy frontend build
COPY --from=frontend-builder /app/frontend/dist /usr/share/nginx/html

# Create entrypoint script for dynamic configuration
RUN echo '#!/bin/sh\n\
# Replace environment variables in nginx config\n\
envsubst \x27$DOMAIN\x27 < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf\n\
\n\
# Validate nginx configuration\n\
nginx -t\n\
\n\
# Start nginx\n\
exec nginx -g "daemon off;"\n\
' > /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost/health || exit 1

EXPOSE 80 443

ENTRYPOINT ["/docker-entrypoint.sh"]