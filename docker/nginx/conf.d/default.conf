# Restaurant Web Production Config with SSL

# HTTP server (redirects to HTTPS)
server {
    listen 80;
    server_name xn--elfogndedonsoto-zrb.com www.xn--elfogndedonsoto-zrb.com _;

    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name xn--elfogndedonsoto-zrb.com www.xn--elfogndedonsoto-zrb.com;

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/xn--elfogndedonsoto-zrb.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/xn--elfogndedonsoto-zrb.com/privkey.pem;
    
    # SSL config
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # API URL rewrite for all endpoints that need v1 prefix
    location ~ ^/api/(dashboard-[^/]+|orders|order-items|tables|recipes|groups|containers|units|zones|ingredients|payments|csrf)/(.*) {
        rewrite ^/api/(.*)$ /api/v1/$1 break;
        proxy_pass http://restaurant-web-backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced connectivity settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
    }
    
    # API URL rewrite for endpoints without trailing slash
    location ~ ^/api/(dashboard-[^/]+|orders|order-items|tables|recipes|groups|containers|units|zones|ingredients|payments|csrf)$ {
        rewrite ^/api/(.*)$ /api/v1/$1 break;
        proxy_pass http://restaurant-web-backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced connectivity settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
    }
    
    # CSRF endpoint specific rule
    location /api/csrf/ {
        rewrite ^/api/(.*)$ /api/v1/$1 break;
        proxy_pass http://restaurant-web-backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced connectivity settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
    }
    
    # API and backend routes
    location /api/ { 
        proxy_pass http://restaurant-web-backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced connectivity settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
    }
    
    location /admin/ { 
        proxy_pass http://restaurant-web-backend:8000;
        proxy_set_header Host $host;
    }
    
    location /static/ { proxy_pass http://restaurant-web-backend:8000; }
    location /media/ { proxy_pass http://restaurant-web-backend:8000; }
    
    # Import endpoints
    location ~ ^/import-(units|zones|tables|containers|groups|ingredients|recipes)/$ {
        proxy_pass http://restaurant-web-backend:8000;
        proxy_set_header Host $host;
        client_max_body_size 10M;
    }

    # Frontend - serve React build files
    root /usr/share/nginx/html;
    index index.html;
    
    # Serve static files first
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # Handle React Router - serve index.html for all non-API routes
    location / {
        try_files $uri $uri/ /index.html;
    }
}