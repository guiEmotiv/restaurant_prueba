# Generated by Django 5.2.2 on 2025-09-12 19:56

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('config', '0001_initial'),
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PrinterConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre descriptivo (ej: Etiquetadora Mesa 1)', max_length=100)),
                ('usb_port', models.CharField(help_text='Puerto USB (ej: /dev/usb/lp0 o /dev/ttyUSB0)', max_length=100, unique=True)),
                ('device_path', models.CharField(blank=True, help_text='Ruta completa del dispositivo (auto-detectada)', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('baud_rate', models.IntegerField(default=9600, help_text='Velocidad de comunicación (solo para seriales)')),
                ('paper_width_mm', models.IntegerField(default=80, help_text='Ancho del papel en mm')),
                ('description', models.TextField(blank=True, help_text='Descripción adicional')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Configuración de Impresora',
                'verbose_name_plural': 'Configuraciones de Impresoras',
                'db_table': 'printer_config',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('waiter', models.CharField(blank=True, help_text='Usuario que creó la orden', max_length=150, null=True, verbose_name='Mesero')),
                ('customer_name', models.CharField(default='Cliente', max_length=150, verbose_name='Nombre del cliente')),
                ('party_size', models.PositiveIntegerField(default=2, verbose_name='Cantidad de personas')),
                ('status', models.CharField(choices=[('CREATED', 'Creado'), ('PREPARING', 'En Preparación'), ('SERVED', 'Servido'), ('PAID', 'Pagado'), ('CANCELED', 'Cancelado')], default='CREATED', max_length=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('preparing_at', models.DateTimeField(blank=True, null=True)),
                ('served_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True, verbose_name='Motivo de cancelación')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='config.table')),
            ],
            options={
                'verbose_name': 'Orden',
                'verbose_name_plural': 'Órdenes',
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='ContainerSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Precio unitario')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='config.container', verbose_name='Envase')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='container_sales', to='operation.order', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Venta de Envase',
                'verbose_name_plural': 'Ventas de Envases',
                'db_table': 'container_sale',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Cantidad')),
                ('status', models.CharField(choices=[('CREATED', 'Creado'), ('PREPARING', 'En Preparación'), ('SERVED', 'Entregado'), ('PAID', 'Pagado'), ('CANCELED', 'Cancelado')], default='CREATED', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('is_takeaway', models.BooleanField(default=False, verbose_name='Para llevar')),
                ('has_taper', models.BooleanField(default=False, verbose_name='Con envoltorio')),
                ('container_price', models.DecimalField(blank=True, decimal_places=2, help_text='Precio del envase al momento de la venta', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('preparing_at', models.DateTimeField(blank=True, null=True)),
                ('served_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('printed_at', models.DateTimeField(blank=True, null=True, verbose_name='Impreso en cocina')),
                ('cancellation_reason', models.TextField(blank=True, null=True, verbose_name='Motivo de cancelación')),
                ('container', models.ForeignKey(blank=True, help_text='Envase utilizado para este item', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='config.container')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operation.order')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.recipe')),
            ],
            options={
                'verbose_name': 'Item de Orden',
                'verbose_name_plural': 'Items de Orden',
                'db_table': 'order_item',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('CASH', 'Efectivo'), ('CARD', 'Tarjeta'), ('TRANSFER', 'Transferencia'), ('YAPE_PLIN', 'Yape/Plin'), ('OTHER', 'Otro')], max_length=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('split_group', models.CharField(blank=True, max_length=36, null=True)),
                ('payer_name', models.CharField(blank=True, max_length=100)),
                ('receipt_printed_at', models.DateTimeField(blank=True, null=True, verbose_name='Recibo impreso')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='operation.order')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='PaymentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operation.orderitem')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_items', to='operation.payment')),
            ],
            options={
                'verbose_name': 'Item de Pago',
                'verbose_name_plural': 'Items de Pago',
                'db_table': 'payment_item',
                'unique_together': {('payment', 'order_item')},
            },
        ),
        migrations.CreateModel(
            name='PrintQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='', help_text='Contenido ESC/POS para imprimir')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('in_progress', 'En Progreso'), ('printed', 'Impreso'), ('failed', 'Fallido'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('attempts', models.PositiveIntegerField(default=0, help_text='Número de intentos de impresión')),
                ('max_attempts', models.PositiveIntegerField(default=3, help_text='Máximo número de intentos')),
                ('error_message', models.TextField(blank=True, help_text='Último mensaje de error')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, help_text='Cuándo se inició la impresión', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Cuándo se completó exitosamente', null=True)),
                ('rpi_worker_id', models.CharField(blank=True, help_text='ID del worker RPi4 que procesa', max_length=100)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='print_jobs', to='operation.orderitem')),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='print_jobs', to='operation.printerconfig')),
            ],
            options={
                'verbose_name': 'Trabajo de Impresión',
                'verbose_name_plural': 'Cola de Impresión',
                'db_table': 'print_queue',
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='print_queue_status_c93836_idx'), models.Index(fields=['printer', 'status'], name='print_queue_printer_9a78af_idx'), models.Index(fields=['order_item'], name='print_queue_order_i_29b2ea_idx')],
            },
        ),
    ]
