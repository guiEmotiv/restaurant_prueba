# Generated by Django 5.2.2 on 2025-09-05 17:34

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('operation', '0047_merge_20250905_1143'),
    ]

    operations = [
        migrations.RunSQL(
            # Recrear la vista con los nombres correctos de tablas
            sql="""
            DROP VIEW IF EXISTS dashboard_operativo_view;
            
            CREATE VIEW dashboard_operativo_view AS 
            SELECT 
                -- Información de la orden
                o.id as order_id,
                o.total_amount as order_total,
                o.status as order_status,
                o.waiter,
                o.table_number,
                COALESCE(z.name, 'Sin zona') as zone_name,
                
                -- Información del item
                oi.id as item_id,
                oi.quantity,
                oi.unit_price,
                oi.total_price,
                (oi.total_price + COALESCE(cs.total_container_price, 0)) as total_with_container,
                oi.status as item_status,
                oi.is_takeaway,
                
                -- Información de la receta
                r.name as recipe_name,
                g.name as category_name,
                g.id as category_id,
                
                -- Información de pagos (simplificado)
                COALESCE(p.payment_method, 'Sin pagos') as payment_method,
                COALESCE(p.amount, 0) as payment_amount,
                
                -- Costos e ingredientes (valores por defecto)
                0 as recipe_total_ingredient_cost,
                0 as recipe_profit_margin,
                
                -- Información de contenedores
                c.name as container_name,
                COALESCE(cs.unit_price, 0) as container_unit_price,
                
                -- Fechas y tiempos
                o.created_at,
                p.paid_at,
                DATE(o.created_at) as operational_date,
                
                -- Cálculos de tiempo
                0 as preparation_time,
                CASE 
                    WHEN p.paid_at IS NOT NULL AND o.created_at IS NOT NULL 
                    THEN CAST((julianday(p.paid_at) - julianday(o.created_at)) * 24 * 60 AS INTEGER)
                    ELSE 0 
                END as service_time_minutes,
                
                -- Clasificación de horario
                CASE 
                    WHEN strftime('%H', o.created_at) BETWEEN '06' AND '11' THEN 'desayuno'
                    WHEN strftime('%H', o.created_at) BETWEEN '12' AND '15' THEN 'almuerzo'
                    WHEN strftime('%H', o.created_at) BETWEEN '16' AND '18' THEN 'lonche'
                    WHEN strftime('%H', o.created_at) BETWEEN '19' AND '23' THEN 'cena'
                    ELSE 'madrugada'
                END as meal_period,
                
                -- Día de la semana
                CASE strftime('%w', o.created_at)
                    WHEN '0' THEN 'domingo'
                    WHEN '1' THEN 'lunes'
                    WHEN '2' THEN 'martes'
                    WHEN '3' THEN 'miercoles'
                    WHEN '4' THEN 'jueves'
                    WHEN '5' THEN 'viernes'
                    WHEN '6' THEN 'sabado'
                    ELSE 'desconocido'
                END as day_of_week
                
            FROM "operation_order" o
            LEFT JOIN "operation_orderitem" oi ON o.id = oi.order_id
            LEFT JOIN inventory_recipe r ON oi.recipe_id = r.id
            LEFT JOIN inventory_group g ON r.group_id = g.id
            LEFT JOIN "operation_table" t ON o.table_id = t.id
            LEFT JOIN "operation_zone" z ON t.zone_id = z.id
            LEFT JOIN "operation_payment" p ON o.id = p.order_id
            LEFT JOIN (
                SELECT 
                    order_id, 
                    container_id,
                    SUM(quantity * unit_price) as total_container_price,
                    AVG(unit_price) as unit_price
                FROM "operation_containersale"
                GROUP BY order_id, container_id
            ) cs ON o.id = cs.order_id
            LEFT JOIN "operation_container" c ON cs.container_id = c.id
            
            ORDER BY o.created_at DESC, oi.id;
            """,
            reverse_sql="DROP VIEW IF EXISTS dashboard_operativo_view;"
        )
    ]
