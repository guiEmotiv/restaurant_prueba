# Generated by Django 5.2.2 on 2025-09-02 16:57
# FIXED VERSION: Safe removal of CartItem fields with existence checks

from django.db import migrations, models
import django.db.utils


def safe_remove_cart_fields(apps, schema_editor):
    """
    Safely remove CartItem fields only if the table exists.
    This handles cases where the table was already dropped or never existed.
    """
    db_alias = schema_editor.connection.alias
    
    # Check if cart_item table exists
    with schema_editor.connection.cursor() as cursor:
        cursor.execute("""
            SELECT name FROM sqlite_master 
            WHERE type='table' AND name='cart_item';
        """)
        table_exists = cursor.fetchone()
    
    if not table_exists:
        print("⚠️  cart_item table doesn't exist, skipping field removal operations")
        return
    
    # If table exists, proceed with field removals
    try:
        CartItem = apps.get_model('operation', 'CartItem')
        if CartItem._meta.get_field('cart'):
            print("✅ Removing cart field from CartItem")
        if CartItem._meta.get_field('container'):  
            print("✅ Removing container field from CartItem")
        if CartItem._meta.get_field('recipe'):
            print("✅ Removing recipe field from CartItem")
    except Exception as e:
        print(f"⚠️  CartItem model not found or fields don't exist: {e}")


def safe_remove_order_ingredient_fields(apps, schema_editor):
    """
    Safely remove OrderItemIngredient fields only if the table exists.
    """
    try:
        OrderItemIngredient = apps.get_model('operation', 'OrderItemIngredient')
        print("✅ Removing OrderItemIngredient fields")
    except Exception as e:
        print(f"⚠️  OrderItemIngredient model not found: {e}")


def reverse_safe_remove(apps, schema_editor):
    """
    This operation is not reversible as we're doing safe cleanup.
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('operation', '0036_recreate_dashboard_view_correct_tables'),
    ]

    operations = [
        # Safe field removals with existence checks
        migrations.RunPython(
            safe_remove_cart_fields, 
            reverse_safe_remove,
            hints={'operation_type': 'safe_cleanup'}
        ),
        
        migrations.RunPython(
            safe_remove_order_ingredient_fields, 
            reverse_safe_remove,
            hints={'operation_type': 'safe_cleanup'}
        ),
        
        # Safe operational date field removals (these fields might exist)
        migrations.RunSQL(
            "ALTER TABLE container_sale DROP COLUMN IF EXISTS operational_date;",
            reverse_sql="-- Cannot reverse this operation",
            hints={'safe_operation': True}
        ),
        
        migrations.RunSQL(
            "ALTER TABLE orders DROP COLUMN IF EXISTS operational_date;", 
            reverse_sql="-- Cannot reverse this operation",
            hints={'safe_operation': True}
        ),
        
        migrations.RunSQL(
            "ALTER TABLE payment DROP COLUMN IF EXISTS operational_date;",
            reverse_sql="-- Cannot reverse this operation", 
            hints={'safe_operation': True}
        ),
        
        # Add new Order fields (safe to add)
        migrations.AddField(
            model_name='order',
            name='customer_name',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre del cliente'),
        ),
        migrations.AddField(
            model_name='order',
            name='party_size',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Cantidad de personas'),
        ),
        
        # Safe table drops (only if they exist)
        migrations.RunSQL(
            "DROP TABLE IF EXISTS cart;",
            reverse_sql="-- Cannot reverse this operation",
            hints={'safe_operation': True}
        ),
        
        migrations.RunSQL(
            "DROP TABLE IF EXISTS cart_item;", 
            reverse_sql="-- Cannot reverse this operation",
            hints={'safe_operation': True}
        ),
        
        migrations.RunSQL(
            "DROP TABLE IF EXISTS operation_orderitemingredient;",
            reverse_sql="-- Cannot reverse this operation",
            hints={'safe_operation': True}
        ),
    ]