#!/bin/bash

echo "‚ö° Quick Restaurant Setup - Minimal Version"
echo "=========================================="

# Crear .env si no existe
if [ ! -f ".env" ]; then
    cp .env.example .env
    echo "‚úÖ .env created"
fi

# Crear directorios
mkdir -p backend/data/logs

echo ""
echo "üîß Installing minimal Django setup..."

# Instalar solo Django en el sistema (sin venv para ser m√°s r√°pido)
cd backend/

# Intentar instalaci√≥n m√≠nima y r√°pida
pip3 install --user --no-cache-dir Django==5.2.2 || {
    echo "‚ö†Ô∏è Failed to install Django 5.2.2, trying latest..."
    pip3 install --user --no-cache-dir Django || {
        echo "‚ùå Could not install Django. Please install manually:"
        echo "   pip3 install Django"
        exit 1
    }
}

echo "‚úÖ Django installed"

# Setup b√°sico de base de datos
echo "üóÑÔ∏è Database setup..."
python3 manage.py migrate --run-syncdb 2>/dev/null || {
    echo "‚ö†Ô∏è Migration had issues, but continuing..."
}

# Crear usuario admin b√°sico
echo "üë§ Creating admin user..."
python3 manage.py shell -c "
from django.contrib.auth.models import User
if not User.objects.filter(username='admin').exists():
    User.objects.create_superuser('admin', 'admin@test.com', 'admin123')
    print('‚úÖ Admin: admin/admin123')
else:
    print('‚úÖ Admin already exists')
" 2>/dev/null || echo "‚ö†Ô∏è Could not create admin user"

echo ""
echo "üöÄ Starting minimal Django server..."
echo "Backend: http://localhost:8000"
echo "Admin: http://localhost:8000/admin (admin/admin123)"
echo ""
echo "Note: This is minimal setup without frontend"
echo "Press Ctrl+C to stop"
echo ""

# Iniciar servidor Django b√°sico
python3 manage.py runserver 0.0.0.0:8000