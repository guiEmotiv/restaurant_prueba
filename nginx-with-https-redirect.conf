upstream app {
    server restaurant-app:8000;
}

# HTTP server - serve everything here for now
server {
    listen 80;
    server_name www.xn--elfogndedonsoto-zrb.com xn--elfogndedonsoto-zrb.com;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Root and error pages
    root /usr/share/nginx/html;
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    # API endpoints - proxy to Django backend with v1 prefix
    location ~ ^/api/(.*) {
        rewrite ^/api/(.*)$ /api/v1/$1 break;
        proxy_pass http://app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Frontend files - serve React build
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}

# HTTPS server - temporary redirect to HTTP until we have SSL certificates
server {
    listen 443 ssl default_server;
    server_name _;
    
    # Dummy SSL certificate (self-signed) for basic SSL negotiation
    ssl_certificate /etc/nginx/ssl/dummy.crt;
    ssl_private_key /etc/nginx/ssl/dummy.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Redirect all HTTPS to HTTP temporarily
    return 301 http://$host$request_uri;
}